// Generated by LiveScript 1.3.1
(function(){
  var del, gulp, gulpJade, gulpLivereload, gulpLivescript, gulpNodemon, gulpShell, gulpStylus, gulpUtil, gulpWatch, gulpWebpack, nib, Primus, App, env, script, x$, defaultTasks;
  del = require('del');
  gulp = require('gulp');
  gulpJade = require('gulp-jade');
  gulpLivereload = require('gulp-livereload');
  gulpLivescript = require('gulp-livescript');
  gulpNodemon = require('gulp-nodemon');
  gulpShell = require('gulp-shell');
  gulpShell = require('gulp-shell');
  gulpStylus = require('gulp-stylus');
  gulpUtil = require('gulp-util');
  gulpWatch = require('gulp-watch');
  gulpWebpack = require('gulp-webpack');
  nib = require('nib');
  Primus = require('primus');
  App = require('./server/App');
  env = process.env.NODE_ENV || 'development';
  gulp.task('build:primus', function(cb){
    return cb();
  });
  gulp.task('build:stylus', function(){
    return gulp.src('./client/stylus/master.styl').pipe(gulpStylus({
      use: nib(),
      compress: true
    })).pipe(gulp.dest('./public'));
  });
  gulp.task('build:react', function(){
    return gulp.src('./shared/react/*.ls').pipe(gulpLivescript({
      bare: true
    })).pipe(gulp.dest('./build/shared/react'));
  });
  gulp.task('build:js', function(){
    return gulp.src('./{client,shared,server}/*.ls').pipe(gulpLivescript({
      bare: true
    })).pipe(gulp.dest('./build'));
  });
  gulp.task('build', ['build:primus', 'build:js', 'build:stylus']);
  gulp.task('pack', ['build:primus', 'build:js', 'build:react'], function(){
    gulp.src('./build/{client,shared}/*.js').pipe(gulpWebpack()).pipe(gulp.dest('./public/builds'));
    return gulp.src('./client/vendor/*.js').pipe(gulpWebpack()).pipe(gulp.dest('./public/vendor'));
  });
  gulp.task('watch', function(){
    gulp.watch('./shared/react/*.ls', ['build:react']);
    gulp.watch('./{client,shared,server}/*.ls', ['build:js', 'pack']);
    gulp.watch('./client/stylus/*.styl', ['build:stylus']);
    return gulpLivereload.listen();
  });
  gulp.task('stop', gulpShell.task('pm2 stop processes.json'));
  gulp.task('clean', function(cb){
    return del(['./build/**'], cb);
  });
  script = './build/server/main.js';
  gulp.task('development', ['build', 'watch'], function(){
    return gulpNodemon({
      script: script,
      nodeArgs: '--harmony'
    });
  });
  gulp.task('production', ['build'], gulpShell.task('pm2 start processes.json'));
  x$ = defaultTasks = ['build', 'pack'];
  x$.push(env);
  gulp.task('default', defaultTasks);
}).call(this);
