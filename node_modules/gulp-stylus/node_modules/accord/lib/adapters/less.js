// Generated by CoffeeScript 1.7.0
(function() {
  var Adapter, Less, W,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Adapter = require('../adapter_base');

  W = require('when');

  Less = (function(_super) {
    __extends(Less, _super);

    function Less() {
      return Less.__super__.constructor.apply(this, arguments);
    }

    Less.prototype.name = 'less';

    Less.prototype.extensions = ['less'];

    Less.prototype.output = 'css';

    Less.prototype._render = function(str, options) {
      var deferred, parser;
      deferred = W.defer();
      parser = new this.engine.Parser(options);
      parser.parse(str, function(err, tree) {
        if (err) {
          return deferred.reject(err);
        }
        try {
          return deferred.resolve(tree.toCSS());
        } catch (_error) {
          err = _error;
          return deferred.reject(err);
        }
      });
      return deferred.promise;
    };

    return Less;

  })(Adapter);

  module.exports = Less;

}).call(this);
