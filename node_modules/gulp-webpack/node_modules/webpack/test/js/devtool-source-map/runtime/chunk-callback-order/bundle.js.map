{"version":3,"sources":["webpack:///webpack/bootstrap 155207370416dd34cbec","webpack:///./runtime/chunk-callback-order/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAc,yEAAyE,gBAAgB;AACvG;AACA,iGAAyF,kBAAkB;AAC3G;AACA;AACA;AACA;AACA;AACA,2BAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,uBAAe,sBAAsB;AACrC;AACA,aAAK;AACL,YAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wC;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF,EAAC","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0:1\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\tif(installedChunks[chunkId] === 1) callback.call(null, __webpack_require__);\n \t\telse if(!installedChunks[chunkId]) {\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar filename = __dirname + \"/\" + chunkId + \".bundle.js\";\n \t\t\trequire('fs').readFile(filename, 'utf-8',  function(err, content) {\n \t\t\t\tif(err) { if(__webpack_require__.onError) return __webpack_require__.onError(err); else throw err; }\n \t\t\t\tvar chunk = {};\n \t\t\t\trequire('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\n})', filename)(chunk, require, require('path').dirname(filename), filename);\n \t\t\t\tvar moreModules = chunk.modules, chunkIds = chunk.ids;\n \t\t\t\tfor(var moduleId in moreModules) {\n \t\t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t\t}\n \t\t\t\tvar callbacks = [];\n \t\t\t\tfor(var i = 0; i < chunkIds.length; i++) {\n \t\t\t\t\tif(Array.isArray(installedChunks[chunkIds[i]]))\n \t\t\t\t\t\tcallbacks = callbacks.concat(installedChunks[chunkIds[i]]);\n \t\t\t\t\tinstalledChunks[chunkIds[i]] = 1;\n \t\t\t\t}\n \t\t\t\tfor(i = 0; i < callbacks.length; i++)\n \t\t\t\t\tcallbacks[i].call(null, __webpack_require__);\n \t\t\t});\n \t\t} else installedChunks[chunkId].push(callback);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 155207370416dd34cbec\n **/","it(\"should fire multiple code load callbacks in the correct order\", function(done) {\r\n\tvar calls = [];\r\n\trequire.ensure([], function(require) {\r\n\t\trequire(\"./duplicate\");\r\n\t\trequire(\"./duplicate2\");\r\n\t\tcalls.push(1);\r\n\t});\r\n\trequire.ensure([], function(require) {\r\n\t\trequire(\"./duplicate\");\r\n\t\trequire(\"./duplicate2\");\r\n\t\tcalls.push(2);\r\n\t\tcalls.should.be.eql([1,2]);\r\n\t\tdone();\r\n\t});\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./runtime/chunk-callback-order/index.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":"","file":"bundle.js"}