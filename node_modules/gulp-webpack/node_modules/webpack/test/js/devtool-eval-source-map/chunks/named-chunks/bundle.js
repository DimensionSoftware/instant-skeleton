/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded chunks
/******/ 	// "1" means "already loaded"
/******/ 	var installedChunks = {
/******/ 		0:1
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		if(installedChunks[chunkId] === 1) callback.call(null, __webpack_require__);
/******/ 		else if(!installedChunks[chunkId]) {
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var filename = __dirname + "/" + chunkId + ".bundle.js";
/******/ 			require('fs').readFile(filename, 'utf-8',  function(err, content) {
/******/ 				if(err) { if(__webpack_require__.onError) return __webpack_require__.onError(err); else throw err; }
/******/ 				var chunk = {};
/******/ 				require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\n})', filename)(chunk, require, require('path').dirname(filename), filename);
/******/ 				var moreModules = chunk.modules, chunkIds = chunk.ids;
/******/ 				for(var moduleId in moreModules) {
/******/ 					modules[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 				var callbacks = [];
/******/ 				for(var i = 0; i < chunkIds.length; i++) {
/******/ 					if(Array.isArray(installedChunks[chunkIds[i]]))
/******/ 						callbacks = callbacks.concat(installedChunks[chunkIds[i]]);
/******/ 					installedChunks[chunkIds[i]] = 1;
/******/ 				}
/******/ 				for(i = 0; i < callbacks.length; i++)
/******/ 					callbacks[i].call(null, __webpack_require__);
/******/ 			});
/******/ 		} else installedChunks[chunkId].push(callback);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!**************************************!*\
  !*** ./chunks/named-chunks/index.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("it(\"should handle named chunks\", function(done) {\r\n\tvar sync = false;\r\n\t__webpack_require__.e/*nsure*/(1, function(require) {\r\n\t\t__webpack_require__(/*! ./empty?a */ 1);\r\n\t\t__webpack_require__(/*! ./empty?b */ 2);\r\n\t\tsync = true;\r\n\t\ttestLoad();\r\n\t\tsync = false;\r\n\t\tdone();\r\n\t}, /*! named-chunk */ 0);\r\n\tfunction testLoad() {\r\n\t\t__webpack_require__.e/*nsure*/(1, function(require) {\r\n\t\t\t__webpack_require__(/*! ./empty?c */ 3);\r\n\t\t\t__webpack_require__(/*! ./empty?d */ 4);\r\n\t\t\tsync.should.be.ok;\r\n\t\t}, /*! named-chunk */ 0);\r\n\t}\r\n});\r\n\r\nit(\"should handle empty named chunks\", function(done) {\r\n\tvar sync = true;\r\n\t!/*require.ensure*/(function(require) {\r\n\t\tsync.should.be.ok;\r\n\t}(__webpack_require__));\r\n\t!/*require.ensure*/(function(require) {\r\n\t\tsync.should.be.ok;\r\n\t\tdone();\r\n\t}(__webpack_require__));\r\n\tsync = false;\r\n});\r\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jaHVua3MvbmFtZWQtY2h1bmtzL2luZGV4LmpzPzBiZTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpdChcInNob3VsZCBoYW5kbGUgbmFtZWQgY2h1bmtzXCIsIGZ1bmN0aW9uKGRvbmUpIHtcclxuXHR2YXIgc3luYyA9IGZhbHNlO1xyXG5cdHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbihyZXF1aXJlKSB7XHJcblx0XHRyZXF1aXJlKFwiLi9lbXB0eT9hXCIpO1xyXG5cdFx0cmVxdWlyZShcIi4vZW1wdHk/YlwiKTtcclxuXHRcdHN5bmMgPSB0cnVlO1xyXG5cdFx0dGVzdExvYWQoKTtcclxuXHRcdHN5bmMgPSBmYWxzZTtcclxuXHRcdGRvbmUoKTtcclxuXHR9LCBcIm5hbWVkLWNodW5rXCIpO1xyXG5cdGZ1bmN0aW9uIHRlc3RMb2FkKCkge1xyXG5cdFx0cmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uKHJlcXVpcmUpIHtcclxuXHRcdFx0cmVxdWlyZShcIi4vZW1wdHk/Y1wiKTtcclxuXHRcdFx0cmVxdWlyZShcIi4vZW1wdHk/ZFwiKTtcclxuXHRcdFx0c3luYy5zaG91bGQuYmUub2s7XHJcblx0XHR9LCBcIm5hbWVkLWNodW5rXCIpO1xyXG5cdH1cclxufSk7XHJcblxyXG5pdChcInNob3VsZCBoYW5kbGUgZW1wdHkgbmFtZWQgY2h1bmtzXCIsIGZ1bmN0aW9uKGRvbmUpIHtcclxuXHR2YXIgc3luYyA9IHRydWU7XHJcblx0cmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uKHJlcXVpcmUpIHtcclxuXHRcdHN5bmMuc2hvdWxkLmJlLm9rO1xyXG5cdH0sIFwiZW1wdHktbmFtZWQtY2h1bmtcIik7XHJcblx0cmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uKHJlcXVpcmUpIHtcclxuXHRcdHN5bmMuc2hvdWxkLmJlLm9rO1xyXG5cdFx0ZG9uZSgpO1xyXG5cdH0sIFwiZW1wdHktbmFtZWQtY2h1bmtcIik7XHJcblx0c3luYyA9IGZhbHNlO1xyXG59KTtcclxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL2NodW5rcy9uYW1lZC1jaHVua3MvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAwXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIwLmpzIn0=");

/***/ }
/******/ ])